[{"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/index.js":"1","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/App.js":"2","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/navbar.js":"3","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/user.js":"4","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/boss.js":"5","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/home.js":"6","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/api.js":"7","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/login.js":"8","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/register.js":"9","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/dashboard.js":"10","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/job.js":"11","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/jobDetails.js":"12","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/logout.js":"13","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/userContext.js":"14","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/profile.js":"15","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/applications.js":"16"},{"size":196,"mtime":1610593789268,"results":"17","hashOfConfig":"18"},{"size":2960,"mtime":1610723543911,"results":"19","hashOfConfig":"18"},{"size":708,"mtime":1610694654418,"results":"20","hashOfConfig":"18"},{"size":137,"mtime":1610606329309,"results":"21","hashOfConfig":"18"},{"size":137,"mtime":1610606340351,"results":"22","hashOfConfig":"18"},{"size":137,"mtime":1610704419265,"results":"23","hashOfConfig":"18"},{"size":1278,"mtime":1610705114498,"results":"24","hashOfConfig":"18"},{"size":1572,"mtime":1610708399002,"results":"25","hashOfConfig":"18"},{"size":730,"mtime":1610616780662,"results":"26","hashOfConfig":"18"},{"size":6613,"mtime":1610778400426,"results":"27","hashOfConfig":"18"},{"size":1278,"mtime":1610769164281,"results":"28","hashOfConfig":"18"},{"size":3487,"mtime":1610733771934,"results":"29","hashOfConfig":"18"},{"size":782,"mtime":1610704285137,"results":"30","hashOfConfig":"18"},{"size":87,"mtime":1610733544608,"results":"31","hashOfConfig":"18"},{"size":148,"mtime":1610708491571,"results":"32","hashOfConfig":"18"},{"size":1324,"mtime":1610732128226,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"htwxyf",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/index.js",[],["70","71"],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/App.js",["72","73"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { generateApi, useApiGet } from \"./components/Utility/api\";\n\nimport NavBar from \"./components/Utility/navbar\";\nimport User from \"./components/User/user\";\nimport Boss from \"./components/Boss/boss\";\nimport Home from \"./components/Utility/home\";\nimport Login from \"./components/Utility/login\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { JobDetails } from \"./components/User/jobDetails\";\nimport Logout from \"./components/Utility/logout\";\nimport { UserContext } from \"./components/Utility/userContext\";\nimport Profile from \"./components/User/profile\";\nimport Applications from \"./components/User/applications\";\n\nfunction App(props) {\n  const person = {\n    default: [\"login\", \"register\"],\n    user: [\"dashboard\", \"profile\", \"applications\"],\n    boss: [\"create\", \"myJobs\", \"accepted\"],\n  };\n  \n  // useEffect(()=>{\n  //   const token = localStorage.getItem('person')\n  //   setauthToken(token)\n  // }, [])\n  \n  const [authToken, setauthToken] = useState('');\n\n\n  let who = \"default\";\n  let personName = \"\";\n  const api = generateApi(authToken);\n  const [isLoading, data, errorData] = useApiGet(api, \"/default/who\", [authToken]);\n  if (authToken) {\n    if (!isLoading && data === null) who = \"default\";\n    else if (!isLoading && data.isBoss === true) {\n      who = \"boss\";\n      personName = data.name;\n    } else if (!isLoading && data.isBoss === false) {\n      who = \"user\";\n      personName = data.name;\n    }\n  }\n  // setting the current person\n  const currentPerson = person[who];\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar person={currentPerson} who={who} personName={personName} />\n        <h1>S-LinkedIn</h1>\n        <p>the S stands for hope on superman's planet</p>\n        <p>the S stands for shit on my website</p>\n        <Switch>\n          <UserContext.Provider value={{ authToken, setauthToken }}>\n            <Route path=\"/default\" exact component={Home} />\n            <Route path=\"/default/login\" exact component={Login} />\n            <Route path=\"/default/logout\" exact component={Logout} />\n            <Route path=\"/user\" exact component={User} />\n            <Route path=\"/user/profile\" exact component={Profile}/>\n            <Route path=\"/user/applications\" exact component={Applications}/>\n            <Route path=\"/user/dashboard\" exact component={Dashboard} />\n            <Route path=\"/user/dashboard/:jobId\" exact component={JobDetails} />\n            <Route path=\"/boss\" exact component={Boss} />\n            {/* <Route path=\"/boss/myJobs\" exact component={Boss} /> */}\n            {/* <Route path=\"/boss/view\" component={Boss}/> */}\n            {/* <Route path=\"/boss/accepted\" component={Boss}/> */}\n          </UserContext.Provider>\n        </Switch>\n      </div>\n      {/* {errorData !== \"\"? errorData: \"\"} */}\n    </Router>\n  );\n}\n\nexport default App;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/navbar.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/user.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/boss.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/home.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/api.js",["74","75"],"import { useEffect, useState } from 'react' \nimport axios from 'axios'\n\nexport const generateApi = (authToken) => {\n    const api = axios.create({\n        baseURL: 'http://localhost:5000/',\n        headers: {\n            \"auth-token\": authToken\n        }\n    })\n\n    return api\n}\n\n\nexport const useApiGet = (api, url, dependencies=[]) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [data, setData] = useState(null)\n    const [errorData, setErrorData] = useState(\"\")\n\n    // getting the data from the url provided\n    // equivalent to component did mount\n    useEffect(()=>{\n        const getData = async () => {\n            try {\n                setIsLoading(true)\n                const result = await api.get(url)\n                \n                // setting the states\n                setIsLoading(false)\n                setData(result.data)\n            } catch (error) {\n                try {\n                    setErrorData(error.response.data)\n                } catch (error) {\n                    setErrorData(error)\n                }\n    \n                // setting the state\n                setIsLoading(false)\n            }\n        }\n\n        getData()\n    }, dependencies)\n\n    // return the needed data\n    return [isLoading, data, errorData]\n}\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/login.js",["76"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { generateApi } from \"./api\";\nimport { UserContext } from \"./userContext\";\n\nfunction Login(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [errorData, setErrorData] = useState(\"\")\n  const {authToken, setauthToken} = useContext(UserContext)\n\n  const onSubmit = async (data) => {\n    const api = generateApi()\n    try {\n        const results = await api.post(\"/default/signin\", data)\n        setauthToken(results.data.token)\n        setIsLoggedIn(true)\n        localStorage.setItem('person', results.data.token)\n      } catch (error) {\n        setErrorData(error.response.data)\n      }\n  }\n\n  return (\n    <div className=\"Login\">\n      {isLoggedIn && <Redirect to=\"/default\"/>}\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          name=\"email\"\n          defaultValue=\"\"\n          placeholder=\"email\"\n          ref={register({ required: true })}\n        />\n        {errors.email && \"Email is required\"}\n        <input\n          name=\"password\"\n          defaultValue=\"\"\n          placeholder=\"password\"\n          ref={register({ required: true, minLength: 8, maxLength: 128 })}\n        />\n        {errors.password && \"password must be in between 8 and 128 letters\"}\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      {errorData !== \"\"? errorData: \"\"}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/register.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/dashboard.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/job.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/jobDetails.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/logout.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/userContext.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/profile.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/applications.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":35,"column":27,"nodeType":"83","messageId":"84","endLine":35,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":45,"column":8,"nodeType":"83","endLine":45,"endColumn":20},{"ruleId":"86","severity":1,"message":"88","line":45,"column":8,"nodeType":"83","endLine":45,"endColumn":20,"suggestions":"89"},{"ruleId":"81","severity":1,"message":"90","line":11,"column":10,"nodeType":"83","messageId":"84","endLine":11,"endColumn":19},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'errorData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'api' and 'url'. Either include them or remove the dependency array.",["93"],"'authToken' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [api, url]",{"range":"96","text":"97"},[1191,1203],"[api, url]"]