[{"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/index.js":"1","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/App.js":"2","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/navbar.js":"3","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/user.js":"4","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/boss.js":"5","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/home.js":"6","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/api.js":"7","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/login.js":"8","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/register.js":"9","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/dashboard.js":"10","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/job.js":"11","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/jobDetails.js":"12","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/logout.js":"13","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/userContext.js":"14","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/profile.js":"15","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/applications.js":"16","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/myJobs.js":"17","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/jobDetails.js":"18","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/jobApplicationDetails.js":"19","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/jobCreate.js":"20","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/acceptedUsers.js":"21"},{"size":196,"mtime":1610593789268,"results":"22","hashOfConfig":"23"},{"size":3694,"mtime":1610901189277,"results":"24","hashOfConfig":"23"},{"size":708,"mtime":1610694654418,"results":"25","hashOfConfig":"23"},{"size":137,"mtime":1610606329309,"results":"26","hashOfConfig":"23"},{"size":2477,"mtime":1610904459462,"results":"27","hashOfConfig":"23"},{"size":137,"mtime":1610704419265,"results":"28","hashOfConfig":"23"},{"size":1278,"mtime":1610705114498,"results":"29","hashOfConfig":"23"},{"size":1575,"mtime":1610862787789,"results":"30","hashOfConfig":"23"},{"size":2389,"mtime":1610820084291,"results":"31","hashOfConfig":"23"},{"size":6785,"mtime":1610953512911,"results":"32","hashOfConfig":"23"},{"size":1315,"mtime":1610780198996,"results":"33","hashOfConfig":"23"},{"size":3488,"mtime":1610779949739,"results":"34","hashOfConfig":"23"},{"size":782,"mtime":1610704285137,"results":"35","hashOfConfig":"23"},{"size":87,"mtime":1610733544608,"results":"36","hashOfConfig":"23"},{"size":5018,"mtime":1610902102309,"results":"37","hashOfConfig":"23"},{"size":1348,"mtime":1610778567049,"results":"38","hashOfConfig":"23"},{"size":746,"mtime":1610780858933,"results":"39","hashOfConfig":"23"},{"size":4165,"mtime":1610865345446,"results":"40","hashOfConfig":"23"},{"size":4103,"mtime":1610813655143,"results":"41","hashOfConfig":"23"},{"size":3849,"mtime":1610860085013,"results":"42","hashOfConfig":"23"},{"size":1189,"mtime":1610906439704,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"htwxyf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"46"},"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/index.js",[],["98","99"],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/App.js",["100"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { generateApi, useApiGet } from \"./components/Utility/api\";\n\nimport NavBar from \"./components/Utility/navbar\";\nimport User from \"./components/User/user\";\nimport Boss from \"./components/Boss/boss\";\nimport Home from \"./components/Utility/home\";\nimport Login from \"./components/Utility/login\";\nimport Dashboard from \"./components/User/dashboard\";\nimport { JobDetails } from \"./components/User/jobDetails\";\nimport Logout from \"./components/Utility/logout\";\nimport { UserContext } from \"./components/Utility/userContext\";\nimport Applications from \"./components/User/applications\";\nimport MyJobs from \"./components/Boss/myJobs\";\nimport BossJobDetails from \"./components/Boss/jobDetails\";\nimport ApplicationDetails from \"./components/Boss/jobApplicationDetails\";\nimport CreateJob from \"./components/Boss/jobCreate\";\nimport Register from \"./components/Utility/register\";\nimport AcceptedUsers from \"./components/Boss/acceptedUsers\";\nimport BossProfile from \"./components/Boss/boss\";\nimport UserProfile from \"./components/User/profile\";\n\nfunction App() {\n  const person = {\n    default: [\"login\", \"register\"],\n    user: [\"dashboard\", \"profile\", \"applications\"],\n    boss: [\"create\", \"myJobs\", \"accepted\", \"profile\"],\n  };\n  \n  // NOTE WORKING\n  // useEffect(()=>{\n  //   const token = localStorage.getItem('person')\n  //   setauthToken(token)\n  // }, [])\n  \n  const [authToken, setauthToken] = useState('');\n\n\n  let who = \"default\";\n  let personName = \"\";\n  const api = generateApi(authToken);\n  const [isLoading, data, errorData] = useApiGet(api, \"/default/who\", [authToken]);\n  if (authToken) {\n    if (!isLoading && data === null) who = \"default\";\n    else if (!isLoading && data.isBoss === true) {\n      who = \"boss\";\n      personName = data.name;\n    } else if (!isLoading && data.isBoss === false) {\n      who = \"user\";\n      personName = data.name;\n    }\n  }\n  // setting the current person\n  const currentPerson = person[who];\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar person={currentPerson} who={who} personName={personName} />\n        <h1>S-LinkedIn</h1>\n        <p>the S stands for hope on superman's planet</p>\n        <p>the S stands for shit on my website</p>\n        <Switch>\n          <UserContext.Provider value={{ authToken, setauthToken }}>\n            <Route path=\"/default\" exact component={Home} />\n            <Route path=\"/default/login\" exact component={Login} />\n            <Route path=\"/default/logout\" exact component={Logout} />\n            <Route path=\"/default/register\" exact component={Register} />\n            <Route path=\"/user\" exact component={User} />\n            <Route path=\"/user/profile\" exact component={UserProfile}/>\n            <Route path=\"/user/applications\" exact component={Applications}/>\n            <Route path=\"/user/dashboard\" exact component={Dashboard} />\n            <Route path=\"/user/dashboard/:jobId\" exact component={JobDetails} />\n            <Route path=\"/boss\" exact component={Boss} />\n            <Route path=\"/boss/profile\" component={BossProfile}/>\n            <Route path=\"/boss/accepted\" component={AcceptedUsers}/>\n            <Route path=\"/boss/create\" component={CreateJob}/>\n            <Route path=\"/boss/myJobs\" exact component={MyJobs} />\n            <Route path=\"/boss/myJobs/:jobId\" exact component={BossJobDetails} />\n            <Route path=\"/boss/myJobs/:jobId/applications\" exact component={ApplicationDetails} />\n          </UserContext.Provider>\n        </Switch>\n      </div>\n      {/* {errorData !== \"\"? errorData: \"\"} */}\n    </Router>\n  );\n}\n\nexport default App;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/navbar.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/user.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/boss.js",["101"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { generateApi, useApiGet } from \"../Utility/api\";\nimport { UserContext } from \"../Utility/userContext\";\n\nfunction BossProfile(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const { authToken } = useContext(UserContext);\n  const api = generateApi(authToken);\n  const [isLoading, data, errorData] = useApiGet(api, \"/boss/profile\");\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  const onSubmit = (formData) => {\n    // console.log(formData);\n    try {\n      // adding the key\n      formData.email = data.email\n      api.patch('/boss/profile', formData)\n    } catch (error) {}\n\n    setIsSubmitted(true)\n  };\n\n  let content;\n  if (isLoading) content = \"loading all the data for you ...\";\n  else if (!isLoading && !data) content = \"login in to make profile changes\";\n  else if (data && !isSubmitted){\n    content = (\n      <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <br></br>\n          Name:{\" \"}\n          <input\n            name=\"name\"\n            defaultValue={data.name}\n            placeholder=\"name\"\n            ref={register({ required: true })}\n          />\n          {errors.name && \"name is required\"}\n          <br></br>\n          Contact:{\" \"}\n          <input\n            name=\"contact\"\n            defaultValue={data.contact}\n            placeholder=\"contact\"\n            ref={register({ required: true })}\n          />\n          {errors.contact && \"contact is required\"}\n          <br></br>\n          Password:{\" \"}\n          <input\n            name=\"password\"\n            defaultValue={data.password}\n            placeholder=\"password\"\n            ref={register({ required: true, minLength: 8, maxLength: 128 })}\n          />\n          {errors.password && \"password must be in between 8 and 128 letters\"}\n          <br></br>\n          \n\t\t\t\t\tBio:{\" \"}\n          <input\n            name=\"bio\"\n            defaultValue={data.bio}\n            placeholder=\"bio\"\n            ref={register({ required: false, maxLength: 250 })}\n          />\n          {errors.bio && \"bio error\"}\n          <br></br>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t<input type=\"submit\" value=\"submit\" />\n        </form>\n\n        <hr></hr>\n      </div>\n    );\n  } else if (isSubmitted){\n    content = \"successfully updated!\"\n  }\n\n  return (\n    <div className=\"BossProfile\">\n      <h1>BossProfile</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default BossProfile;\n\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/home.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/api.js",["102","103"],"import { useEffect, useState } from 'react' \nimport axios from 'axios'\n\nexport const generateApi = (authToken) => {\n    const api = axios.create({\n        baseURL: 'http://localhost:5000/',\n        headers: {\n            \"auth-token\": authToken\n        }\n    })\n\n    return api\n}\n\n\nexport const useApiGet = (api, url, dependencies=[]) => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [data, setData] = useState(null)\n    const [errorData, setErrorData] = useState(\"\")\n\n    // getting the data from the url provided\n    // equivalent to component did mount\n    useEffect(()=>{\n        const getData = async () => {\n            try {\n                setIsLoading(true)\n                const result = await api.get(url)\n                \n                // setting the states\n                setIsLoading(false)\n                setData(result.data)\n            } catch (error) {\n                try {\n                    setErrorData(error.response.data)\n                } catch (error) {\n                    setErrorData(error)\n                }\n    \n                // setting the state\n                setIsLoading(false)\n            }\n        }\n\n        getData()\n    }, dependencies)\n\n    // return the needed data\n    return [isLoading, data, errorData]\n}\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/login.js",["104"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Redirect } from \"react-router-dom\";\nimport { generateApi } from \"./api\";\nimport { UserContext } from \"./userContext\";\n\nfunction Login(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [errorData, setErrorData] = useState(\"\")\n  const {authToken, setauthToken} = useContext(UserContext)\n\n  const onSubmit = async (data) => {\n    const api = generateApi()\n    try {\n        const results = await api.post(\"/default/signin\", data)\n        setauthToken(results.data.token)\n        setIsLoggedIn(true)\n        // localStorage.setItem('person', results.data.token)\n      } catch (error) {\n        setErrorData(error.response.data)\n      }\n  }\n\n  return (\n    <div className=\"Login\">\n      {isLoggedIn && <Redirect to=\"/default\"/>}\n      <h1>Login</h1>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          name=\"email\"\n          defaultValue=\"\"\n          placeholder=\"email\"\n          ref={register({ required: true })}\n        />\n        {errors.email && \"Email is required\"}\n        <input\n          name=\"password\"\n          defaultValue=\"\"\n          placeholder=\"password\"\n          ref={register({ required: true, minLength: 8, maxLength: 128 })}\n        />\n        {errors.password && \"password must be in between 8 and 128 letters\"}\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n      {errorData !== \"\"? errorData: \"\"}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/register.js",["105","106","107"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n// import { Redirect } from \"react-router-dom\";\nimport { generateApi } from \"./api\";\nimport { UserContext } from \"./userContext\";\n\nfunction Register(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [errorData, setErrorData] = useState(\"\");\n  const [isregistered, setIsRegistered] = useState(false);\n  const onSubmit = async (data) => {\n    if (data.password2 != data.password)\n      setErrorData(\"passwords must be the same\");\n    else {\n      try {\n        delete data[\"password2\"];\n        const api = generateApi();\n        await api.post(\"/default/signup\", data);\n        setIsRegistered(true);\n      } catch (error) {\n        setErrorData(error.response.data);\n      }\n    }\n  };\n\n  let content;\n  if (isregistered) content = \"done!\";\n  else {\n    content = (\n      <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            name=\"email\"\n            placeholder=\"email\"\n            ref={register({ required: true })}\n          />\n          {errors.email && \"Email is required\"}\n          <input\n            name=\"name\"\n            placeholder=\"name\"\n            ref={register({ required: true, minLength: 4, maxLength: 32 })}\n          />\n          {errors.name && \"name is required, must be in [4,32]\"}\n          <input\n            name=\"password\"\n            placeholder=\"password\"\n            ref={register({ required: true, minLength: 8, maxLength: 128 })}\n          />\n          {errors.password && \"password must be in between 8 and 128 letters\"}\n          <input\n            name=\"password2\"\n            placeholder=\"password2\"\n            ref={register({ required: true, minLength: 8, maxLength: 128 })}\n          />\n          {errors.password2 && \"password2 must be in between 8 and 128 letters\"}\n          <br></br>\n          Are you a boss?\n          <input\n            type=\"checkbox\"\n            name=\"isBoss\"\n            ref={register({ required: false })}\n          />{\" \"}\n          Yes\n          {errors.isBoss && \" select\"}\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <br></br>\n        <br></br>\n\n        {errorData !== \"\" ? errorData : \"\"}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Register\">\n      <h1>Register</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default Register;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/dashboard.js",["108"],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/job.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/jobDetails.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/logout.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Utility/userContext.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/profile.js",["109","110","111"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { generateApi, useApiGet } from \"../Utility/api\";\nimport { UserContext } from \"../Utility/userContext\";\n\n// WORKS!\n// AKA: DO NOT FUCKING TOUCH THIS\nfunction Education(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [data, setData] = useState(props.data);\n  const [isAllSubmitted, setIsAllSubmitted] = useState(false);\n\n  const saveAllEducation = () => {\n    // console.log('all education data: ',data)\n    try {\n      props.api.post(\"user/profile/education\", data);\n    } catch (error) {}\n\n    setIsAllSubmitted(true);\n  };\n\n  const deleteEducation = (index) => {\n    let newData = [];\n    for (let i = 0; i < data.length; i++) {\n      if (index != i) newData.push(data[i]);\n    }\n    setData(newData);\n  };\n\n  const onSubmit = (submitData) => {\n    // console.log('education submit', data)\n    setData((oldData) => oldData.concat(submitData));\n    setIsSubmitted(true);\n  };\n\n  const expandEducation = (education) => {\n    let educationContent = [];\n    for (let i = 0; i < education.length; i++) {\n      const element = education[i];\n      // console.log(element)\n      educationContent.push(\n        <ul>\n          <li>instituteName: {element.instituteName}</li>\n          <li>yearStart: {element.yearStart}</li>\n          <li>\n            yearEnd: {element.yearEnd === \"\" ? \"current\" : element.yearEnd}\n          </li>\n          <button onClick={() => deleteEducation(i)}>Delete</button>\n        </ul>\n      );\n    }\n    return educationContent;\n  };\n\n  let content = (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        name=\"instituteName\"\n        defaultValue=\"\"\n        placeholder=\"instituteName\"\n        ref={register({ required: true })}\n      />\n      {errors.instituteName && \"instituteName is required\"}\n      <br></br>\n\n      <input\n        name=\"yearStart\"\n        defaultValue=\"\"\n        placeholder=\"yearStart\"\n        ref={register({ required: true })}\n      />\n      {errors.yearStart && \"yearStart is required\"}\n      <br></br>\n\n      <input\n        name=\"yearEnd\"\n        defaultValue=\"\"\n        placeholder=\"yearEnd\"\n        ref={register({ required: false })}\n      />\n      {errors.yearEnd && \"yearEnd is required\"}\n      <br></br>\n\n      <input type=\"submit\" value=\"Add Education!\" />\n    </form>\n  );\n\n  let endContent;\n  if (isAllSubmitted) {\n    endContent = \"Saved Changes!\";\n  }\n\n  return (\n    <div>\n      <h3>Education</h3>\n      {expandEducation(data)}\n      {content}\n      <button onClick={saveAllEducation}>Save ALL education changes</button>\n      {endContent}\n    </div>\n  );\n}\n\nfunction UserProfile(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const { authToken } = useContext(UserContext);\n  const api = generateApi(authToken);\n  const [isLoading, data, errorData] = useApiGet(api, \"/user/profile\");\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  const onSubmit = (formData) => {\n    console.log(formData);\n    try {\n      api.patch('/user/profile', formData)\n    } catch (error) {}\n\n    setIsSubmitted(true)\n  };\n\n  let content;\n  if (isLoading) content = \"loading all the data for you ...\";\n  else if (!isLoading && !data) content = \"login in to make profile changes\";\n  else if (data && !isSubmitted){\n    content = (\n      <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          Email:{\" \"}\n          <input\n            name=\"email\"\n            defaultValue={data.email}\n            placeholder=\"email\"\n            ref={register({ required: true })}\n          />\n          {errors.email && \"name is required\"}\n          <br></br>\n          Name:{\" \"}\n          <input\n            name=\"name\"\n            defaultValue={data.name}\n            placeholder=\"name\"\n            ref={register({ required: true })}\n          />\n          {errors.name && \"name is required\"}\n          <br></br>\n          Contact:{\" \"}\n          <input\n            name=\"contact\"\n            defaultValue={data.contact}\n            placeholder=\"contact\"\n            ref={register({ required: true })}\n          />\n          {errors.contact && \"contact is required\"}\n          <br></br>\n          Password:{\" \"}\n          <input\n            name=\"password\"\n            defaultValue={data.password}\n            placeholder=\"password\"\n            ref={register({ required: true, minLength: 8, maxLength: 128 })}\n          />\n          {errors.password && \"password must be in between 8 and 128 letters\"}\n          {/* {expandEducation(data.education)}\n\t\t\t\t<button>Add new Education</button> */}\n          <input type=\"submit\" value=\"submit\" />\n        </form>\n\n        <hr></hr>\n        <Education api={api} data={data.education} />\n      </div>\n    );\n  } else if (isSubmitted){\n    content = \"successfully updated!\"\n  }\n\n  return (\n    <div className=\"UserProfile\">\n      <h1>UserProfile</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default UserProfile;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/User/applications.js",[],"/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/myJobs.js",["112"],"import React, { useContext } from \"react\"\nimport { Job } from \"../User/job\"\nimport { generateApi, useApiGet } from \"../Utility/api\"\nimport { UserContext } from \"../Utility/userContext\"\n\nfunction MyJobs(props) {\n  const { authToken } = useContext(UserContext)\n  const api = generateApi(authToken)\n  const [isLoading, data, errorData] = useApiGet(api, \"/boss/myJobs\", [])\n\n\tlet content = []\n\n\tif(isLoading){\n\t\tcontent = 'loading ...'\n\t} else if (!isLoading && !data){\n\t\tcontent = 'sigin needed!'\n\t} else{\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst element = data[i];\n\t\t\tcontent.push(<Job data={element} boss={true}/>)\n\t\t}\n\t}\n\n  return (\n    <div className=\"MyJobs\">\n      <h1>My Jobs</h1>\n\t\t\t{content}\n\t\t</div>\n  )\n}\n\nexport default MyJobs\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/jobDetails.js",["113"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Job } from \"../User/job\";\nimport { generateApi, useApiGet } from \"../Utility/api\";\nimport { UserContext } from \"../Utility/userContext\";\nimport { Redirect } from 'react-router-dom'\nimport ApplicationDetails from \"./jobApplicationDetails\";\n\nfunction DeletingJob(props){\n  const { authToken } = useContext(UserContext);\n  const api = generateApi(authToken);\n  const url = props.urlDeleting;\n  const [isDeleted, setIsDeleted] = useState(false)\n\n  // handling submits for the forms\n  const onSubmitDelete = () => {\n    try {\n      // console.log('deleting ... ')\n      // console.log(url)\n      api.delete(url)\n      setIsDeleted(true)    \n      // window.location.reload()\n    } catch (error) {}\n  }\n\n  let content\n  if(isDeleted){\n    content = <Redirect to={'/boss/myJobs'}/>\n  } else {\n    content = (\n      <div>\n      <br></br>\n      are you sure you want to delete this post??\n      <br></br>\n      <br></br>\n      <button onClick={onSubmitDelete}>Confirm Delete</button>\n    </div>\n    )\n  }\n\n  return (\n    <div>\n      {content}\n  </div>\n  )\n}\n\nfunction UpdatingJob(props){\n  const { register, handleSubmit, errors } = useForm();\n  const api = props.api\n  const url = props.url;\n  const jobData = props.jobData;\n  const [isUpdated, setIsUpdated] = useState(false)\n\n  const onSubmitUpdate = (data) => {\n    // console.log(\"new data from update: \", data);\n    try {\n      api.patch(url, data)\n      setIsUpdated(true)\n    } catch (error) {}\n  };\n\n  // date validation\n  const isDate = (date) => {\n    return !isNaN(Date.parse(date));\n  };\n\n\n  let content\n  if(isUpdated){\n    content = <Redirect to={url}/>\n  } else {\n    content = (\n<form onSubmit={handleSubmit(onSubmitUpdate)}>\n        <br></br>\n        Update Job requirements\n        <br></br>\n        <br></br>\n        positionsMax:{\" \"}\n        <input\n          name=\"positionsMax\"\n          defaultValue={jobData.positionsMax}\n          placeholder=\"positionsMax\"\n          ref={register()}\n        />\n        <br></br>\n        applicationsMax:{\" \"}\n        <input\n          name=\"applicationsMax\"\n          defaultValue={jobData.applicationsMax}\n          placeholder=\"applicationsMax\"\n          ref={register()}\n        />\n        <br></br>\n        dateDeadline:{\" \"}\n        <input\n          name=\"dateDeadline\"\n          defaultValue={jobData.dateDeadline}\n          placeholder=\"dateDeadline\"\n          ref={register({ validate: isDate })}\n        />\n        <br></br>\n        NOTE: date must be a valid date!\n        <br></br>\n        <br></br>\n        <input type=\"submit\" value=\"submit\" />\n      </form>\n    )\n  }\n\n  return (\n    <div>\n      {content}\n  </div>\n  )\n}\n\nfunction BossJobDetails(props) {\n  const { authToken } = useContext(UserContext);\n  const api = generateApi(authToken);\n  const url = \"boss/myJobs/\" + props.match.params.jobId;\n  const [isLoading, jobData] = useApiGet(api, url, []);\n  const [showBonus, setShowBonus] = useState(\"\");\n\n\t// The below is for the basic job details as seen on user/dashboard\n  let content;\n  if (isLoading) content = \"loading all the details ...\";\n  else if (!isLoading && !jobData)\n    content = \"something taking time ... pls hold tight\";\n  else {\n    content = (\n      <div>\n        <Job data={jobData} boss={true}/>\n        <button onClick={() => setShowBonus(\"delete\")}>Delete</button>\n        <button onClick={() => setShowBonus(\"update\")}>Update</button>\n        <button onClick={() => setShowBonus(\"applications\")}>Applications</button>     \n      </div>\n    );\n  }\n\n\n\n  // show the bonus content\n  let bonusContent;\n  if (showBonus === \"delete\") {\n    bonusContent = (\n      <DeletingJob urlDeleting={url}/>\n    );\n  } else if (showBonus === \"update\") {\n    bonusContent = (\n      <UpdatingJob url={url} api={api} jobData={jobData}/>  \n    );\n  } else if (showBonus === \"applications\") {\n    bonusContent = (\n\t\t\t<ApplicationDetails data={jobData} url={url}/>\n    );\n  }\n\n  return (\n    <div className=\"BossJobDetails\">\n      <h1>BossJobDetails</h1>\n      {content}\n      {bonusContent}\n    </div>\n  );\n}\n\nexport default BossJobDetails;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/jobApplicationDetails.js",["114","115","116","117","118"],"import React, { useContext, useState } from \"react\";\nimport { generateApi } from \"../Utility/api\";\nimport { UserContext } from \"../Utility/userContext\";\n\nfunction ApplicationDetails(props) {\n  const { authToken } = useContext(UserContext)\n  const api = generateApi(authToken)\n\n  // setting up status lists\n  const [appliedApplications, setAppliedApplications] = useState(\n    props.data.appliedApplications\n  );\n  const [shortListedApplications, setShortListedApplications] = useState(\n    props.data.shortListedApplications\n  );\n  const [acceptedApplications, setAcceptedApplications] = useState(\n    props.data.acceptedApplications\n  );\n  const [rejectedApplications, setRejectedApplications] = useState(\n    props.data.rejectedApplications\n  );\n\n  // SHORTLISTS THE USER\n  const shortList = (data) => {\n    setAppliedApplications(\n      appliedApplications.filter(\n        (application) => application.personId != data.personId\n      )\n    );\n    setShortListedApplications(shortListedApplications.concat(data));\n  };\n\n  // ACCEPTS THE USER\n  const accept = (data) => {\n    setShortListedApplications(\n      shortListedApplications.filter(\n        (application) => application.personId != data.personId\n      )\n    );\n    setAcceptedApplications(acceptedApplications.concat(data));\n  };\n\n  // REJECTS THE USER - WORKS FROM ANY LIST\n  // BY FILTERING THROUGH ALL OF THEM\n  const reject = (data) => {\n    setAppliedApplications(\n      appliedApplications.filter(\n        (application) => application.personId != data.personId\n      )\n    );\n    setShortListedApplications(\n      shortListedApplications.filter(\n        (application) => application.personId != data.personId\n      )\n    );\n    setAcceptedApplications(\n      acceptedApplications.filter(\n        (application) => application.personId != data.personId\n      )\n    );\n    setRejectedApplications(rejectedApplications.concat(data));\n  };\n\n  // SAVES THE ENTIRE CHANGE SHIT\n  // WORKS HELL YEA\n  const submitApplicationStatus = () => {\n    let data = [\n      appliedApplications,\n      shortListedApplications,\n      acceptedApplications,\n      rejectedApplications,\n    ];\n    // console.log('done!', data);\n    api.post(props.url, data);\n    window.location.reload()\n  };\n\n  // expansion of people inside a particular application status\n  const expandArray = (a, func, buttonName) => {\n    let applications = [];\n    for (let i = 0; i < a.length; i++) {\n      const element = a[i];\n      let skills = [];\n      try {\n        for (let j = 0; j < element.skills.length; j++) {\n          const elementSkill = element.skills[j];\n          skills.push(<li key={j}>{elementSkill}</li>);\n        }\n      } catch (error) {}\n\n      let application = (\n        <li key={i}>\n          <ul>\n            <li>Name: {element.name}</li>\n            <li>SOP: {element.SOP}</li>\n            <li>\n              Skills: <ul>{skills}</ul>\n            </li>\n            <li>Resume: {element.resume}</li>\n            <li>Date of Application: {element.date}</li>\n          </ul>\n          {func ? (\n            <button onClick={() => func(element)}>{buttonName}</button>\n          ) : (\n            \"\"\n          )}\n          {buttonName !== \"empty\" ? (\n            <button onClick={() => reject(element)}>Reject</button>\n          ) : (\n            \"\"\n          )}\n        </li>\n      );\n      applications.push(application);\n    }\n\n    return <ul>{applications}</ul>;\n  };\n\n  return (\n    <div className=\"ApplicationDetails\">\n      <h2>ApplicationDetails</h2>\n      <div>\n        Listing candidates\n        <div>\n          <div>\n            Applied: {expandArray(appliedApplications, shortList, \"Shortlist\")}\n          </div>\n          <div>\n            ShortListed:\n            {expandArray(shortListedApplications, accept, \"Accept\")}\n          </div>\n          <div>Accepted: {expandArray(acceptedApplications, \"\", \"\")}</div>\n          <div>Rejected: {expandArray(rejectedApplications, \"\", \"empty\")}</div>\n        </div>\n        <button onClick={submitApplicationStatus}>Save changes</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ApplicationDetails;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/jobCreate.js",["119"],"import React, { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { generateApi, useApiGet } from \"../Utility/api\";\nimport { UserContext } from \"../Utility/userContext\";\n\nfunction CreateJob(props) {\n\tconst {authToken} = useContext(UserContext)\n\tconst api = generateApi(authToken)\n\tconst [isLoading, recruiterData, errorRecruiterData] = useApiGet(api, '/default/who')\n  const { register, handleSubmit, errors } = useForm();\n  const [errorData, setErrorData] = useState(\"\");\n  const [isCreateJob, setIsCreateJob] = useState(false);\n\tconst [jobType, setJobType] = useState('fulltime')\n\n  const isDate = (date) => {\n    return !isNaN(Date.parse(date));\n  };\n\n  const onSubmit = async (data) => {\n\t\tif(!isDate(data.dateDeadline)){\n\t\t\tsetErrorData(\"deadline must looke like so: \"+new Date())\n\t\t\treturn\n\t\t}\n\n\t\tif(jobType === ''){\n\t\t\tsetErrorData(\"select job type!\")\n\t\t\treturn \n\t\t}\n\n\t\ttry {\n\t\t\tdata.jobType = jobType\n\t\t\tdata.datePosting = new Date()\n\t\t\tdata.recruiterName = recruiterData.name\n\t\t\tdata.recruiterEmail = recruiterData.email\n\t\t\tconsole.log(data);\n\t\t\tawait api.post(\"/boss/create\", data);\n      setIsCreateJob(true);\n    } catch (error) {\n      setErrorData(error.response.data.message);\n    }\n  };\n\n  let content;\n  if (isCreateJob) content = \"job successfully created!\";\n  else if (isLoading){\n\t\tcontent = \"fething your basic data\"\n\t} else if (!isLoading && !recruiterData){\n\t\tcontent = \"error fetching your data, boss. are you logged in?\"\n\t} else if (recruiterData && !recruiterData.isBoss){\n\t\tcontent = \"ey go away. this is only for recruiters, not users lmao\"\n\t} else if (recruiterData && recruiterData.isBoss){\n    content = (\n      <div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            name=\"title\"\n            placeholder=\"title\"\n            ref={register({ required: true })}\n          />\n          {errors.title && \"title is required\"}\n          <br></br>\n\t\t\t\t\t<input\n            name=\"positionsMax\"\n            placeholder=\"positionsMax\"\n            ref={register({ required: true })}\n          />\n          {errors.positionsMax && \"positionsMax is required\"}\n          <br></br>\n\n\n\t\t\t\t\t<input\n            name=\"applicationsMax\"\n            placeholder=\"applicationsMax\"\n            ref={register({ required: true })}\n          />\n          {errors.applicationsMax && \"applicationsMax is required\"}\n          <br></br>\n\n\t\t\t\t\t<input\n            name=\"salary\"\n            placeholder=\"salary\"\n            ref={register({ required: true, min: 0 })}\n          />\n          {errors.salary && \"salary is required and must be positive\"}\n          <br></br>\n\n\n\t\t\t\t\t<input\n            name=\"duration\"\n            placeholder=\"duration\"\n            ref={register({ required: true, min: 0, max: 6 })}\n          />\n          {errors.duration && \"duration is required and must be in [0,6]\"}\n\t\t\t\t\tNote: duration is in months. 0 means indefinite\n          <br></br>\n\n\t\t\t\t\t<select onChange={(e)=>setJobType(e.target.value)}>\n\t\t\t\t\t\t<option value=\"fulltime\">Full time</option>\n\t\t\t\t\t\t<option value=\"parttime\">Part time</option>\n\t\t\t\t\t\t<option value=\"workathome\">Work at home</option>\n\t\t\t\t\t</select>\n          <br></br>\n\n\t\t\t\t\t<input\n            name=\"dateDeadline\"\n            placeholder=\"dateDeadline\"\n            ref={register({ required: true })}\n          />\n          {errors.dateDeadline && \"dateDeadline is required\"}\n\n\t\t\t\t\t<br></br>\n\t\t\t\t\tQuick Note: Dont worry if the weekday is wrong or skipped.\n\t\t\t\t\t<br></br>\n\t\t\t\t\tRest should be correct though.\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <br></br>\n        <br></br>\n\n        {errorData !== \"\" ? errorData : \"\"}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"CreateJob\">\n      <h1>CreateJob</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default CreateJob;\n","/home/tanishq/Desktop/Work/Shitty-LinkedIn/frontend/src/components/Boss/acceptedUsers.js",["120"],"import React, { useContext } from \"react\";\nimport { generateApi, useApiGet } from \"../Utility/api\";\nimport { UserContext } from \"../Utility/userContext\";\n\nfunction AcceptedUsers(props) {\n  const { authToken } = useContext(UserContext);\n  const api = generateApi(authToken);\n  const [isLoading, data, errorData] = useApiGet(api, \"/boss/accepted\");\n\n  const expandUsers = (users) => {\n    let list = [];\n    for (let i = 0; i < users.length; i++) {\n      const user = users[i];\n      const rating =\n        user.rating[1] === 0 || isNaN(user.rating[1])\n          ? \"unrated\"\n          : user.rating[0] / user.rating[1];\n\n      list.push(\n        <ul>\n          <li>{user.name}</li>\n          <li>{user.date}</li>\n          <li>{user.jobType}</li>\n          <li>{user.jobTitle}</li>\n          <li>{rating}</li>\n        </ul>\n      );\n    }\n    return list;\n  };\n\n  let content;\n  if (isLoading) content = \"loading ... pls wait\";\n  else if (!isLoading && !data) content = \"login, stranger!\";\n  else {\n    content = <div>{expandUsers(data)}</div>;\n  }\n\n  return (\n    <div className=\"AcceptedUsers\">\n      <h1>AcceptedUsers</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default AcceptedUsers;\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":43,"column":27,"nodeType":"127","messageId":"128","endLine":43,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":10,"column":27,"nodeType":"127","messageId":"128","endLine":10,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":45,"column":8,"nodeType":"127","endLine":45,"endColumn":20},{"ruleId":"129","severity":1,"message":"131","line":45,"column":8,"nodeType":"127","endLine":45,"endColumn":20,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"133","line":11,"column":10,"nodeType":"127","messageId":"128","endLine":11,"endColumn":19},{"ruleId":"125","severity":1,"message":"134","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":27},{"ruleId":"125","severity":1,"message":"135","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":12,"column":24,"nodeType":"138","messageId":"139","endLine":12,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":94,"column":37,"nodeType":"142","messageId":"143","endLine":94,"endColumn":39},{"ruleId":"125","severity":1,"message":"144","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":26,"column":17,"nodeType":"138","messageId":"139","endLine":26,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":109,"column":27,"nodeType":"127","messageId":"128","endLine":109,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":9,"column":27,"nodeType":"127","messageId":"128","endLine":9,"endColumn":36},{"ruleId":"125","severity":1,"message":"145","line":49,"column":35,"nodeType":"127","messageId":"128","endLine":49,"endColumn":41},{"ruleId":"136","severity":1,"message":"137","line":27,"column":47,"nodeType":"138","messageId":"139","endLine":27,"endColumn":49},{"ruleId":"136","severity":1,"message":"137","line":37,"column":47,"nodeType":"138","messageId":"139","endLine":37,"endColumn":49},{"ruleId":"136","severity":1,"message":"137","line":48,"column":47,"nodeType":"138","messageId":"139","endLine":48,"endColumn":49},{"ruleId":"136","severity":1,"message":"137","line":53,"column":47,"nodeType":"138","messageId":"139","endLine":53,"endColumn":49},{"ruleId":"136","severity":1,"message":"137","line":58,"column":47,"nodeType":"138","messageId":"139","endLine":58,"endColumn":49},{"ruleId":"125","severity":1,"message":"146","line":9,"column":35,"nodeType":"127","messageId":"128","endLine":9,"endColumn":53},{"ruleId":"125","severity":1,"message":"126","line":8,"column":27,"nodeType":"127","messageId":"128","endLine":8,"endColumn":36},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'errorData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'api' and 'url'. Either include them or remove the dependency array.",["149"],"'authToken' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isSubmitted' is assigned a value but never used.","'errors' is assigned a value but never used.","'errorRecruiterData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [api, url]",{"range":"152","text":"153"},[1191,1203],"[api, url]"]